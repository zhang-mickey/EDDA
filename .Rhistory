xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
error_variance <- sum(residuals(ancova_county_size)^2) / df.residual(ancova_county_size)
print(error_variance)
ancova_county_size <- aov(Crops ~ County * Size + Related, data = df)
summary(ancova_county_size)
data = read.table('cholesterol.txt', header = TRUE)
# Before
par(mfrow = c(1,2))
hist(data$Before, main="Before", xlab="Cholesterol (mmol/L)", col="lightblue", border="black")
qqnorm(data$Before, main="Q-Q Plot for Before 8 Weeks")
qqline(data$Before, col="red")
# After
hist(data$After8weeks, main="After 8 Weeks", xlab="Cholesterol (mmol/L)", col="lightgreen", border="black")
qqnorm(data$After8weeks, main="Q-Q Plot for After 8 Weeks")
qqline(data$After8weeks, col="red")
#
boxplot(data$Before)
boxplot(data$Before)
boxplot(data$After8weeks)
par(mfrow = c(1,2))
boxplot(data$Before)
boxplot(data$After8weeks)
par(mfrow = c(1,1))
knitr::opts_chunk$set(echo = TRUE)
# only round 3
options(digits = 3)
knitr::opts_chunk$set(fig.height = 2.5)
data = read.table('cholesterol.txt', header = TRUE)
plot(data$Before, data$After8weeks,
main = "Scatter Plot of Before vs. After 8 Weeks",
xlab = "Before", ylab = "After 8 Weeks",
col = "blue", pch = 16)
plot(data$Before, data$After8weeks,
main = "Scatter Plot of Before vs. After 8 Weeks",
xlab = "Before", ylab = "After 8 Weeks",
col = "black", pch = 16)
df <- read.table("crops.txt", header = TRUE)
df$County <- as.factor(df$County)
df$Related <- as.factor(df$Related)
anova_model1 <- aov(Crops ~ County + Related, data = df)
summary(anova_model1)
df <- read.table("crops.txt", header = TRUE)
df$County <- as.factor(df$County)
df$Related <- as.factor(df$Related)
anova_model2 <- aov(Crops ~ County + Related + County:Related, data = df)
summary(anova_model2)
df <- read.table("crops.txt", header = TRUE)
df$County <- as.factor(df$County)
df$Related <- as.factor(df$Related)
anova_model1 <- aov(Crops ~ County + Related, data = df)
summary(anova_model1)
ggplot(df, aes(x = Size, y = Crops, color = County)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Effect of Size on Crops Across Counties",
x = "Farm Size", y = "Crops Yield")
library(ggplot2)
ggplot(df, aes(x = Size, y = Crops, color = County)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Effect of Size on Crops Across Counties",
x = "Farm Size", y = "Crops Yield")
plot(fitted_values, residuals,
main = "Residuals vs Fitted Values",
xlab = "Fitted Values",
ylab = "Residuals")
abline(h = 0, col = "red", lty = 2) # Add a horizontal line at 0
residuals <- resid(ancova_county_size)
fitted_values <- fitted(ancova_county_size)
qqnorm(residuals)
qqline(residuals, col = "red")
plot(fitted_values1, , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
residuals1 <- resid(anova_model1)
fitted_values1 <- fitted(anova_model1)
qqnorm(residuals1)
plot(fitted_values1, , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
plot(fitted_values1,residuals , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
residuals <- resid(ancova_county_size)
fitted_values <- fitted(ancova_county_size)
qqnorm(residuals)
qqline(residuals, col = "red")
plot(fitted_values, residuals,
main = "Residuals vs Fitted Values",
xlab = "Fitted Values",
ylab = "Residuals")
abline(h = 0, col = "red", lty = 2) # Add a horizontal line at 0
AIC(ancova_main, ancova_county_size, ancova_related_size)
AIC(ancova_main, ancova_county_size, ancova_related_size)
knitr::opts_chunk$set(echo = TRUE)
# only round 3
options(digits = 3)
knitr::opts_chunk$set(fig.height = 2.5)
df <- read.table("crops.txt", header = TRUE)
df$County <- as.factor(df$County)
df$Related <- as.factor(df$Related)
anova_model1 <- aov(Crops ~ County + Related, data = df)
summary(anova_model1)
anova_model2 <- aov(Crops ~ County*Related, data = df)
summary(anova_model2)
anova_model2 <- aov(Crops ~ County*Related, data = df)
summary(anova_model2)
TukeyHSD(anova_model2)
leveneTest(anova_model2)
install.packages("car")
library(car)
leveneTest(anova_model2)
install.packages("car")
library(car)
leveneTest(anova_model2)
#install.packages("car")
library(car)
leveneTest(anova_model2)
df <- read.table("crops.txt", header = TRUE)
df$County <- as.factor(df$County)
df$Related <- as.factor(df$Related)
shapiro.test(df$Crops)
df <- read.table("crops.txt", header = TRUE)
df$County <- as.factor(df$County)
df$Related <- as.factor(df$Related)
shapiro.test(df$Crops)
shapiro.test(df$Sizes)
df <- read.table("crops.txt", header = TRUE)
df$County <- as.factor(df$County)
df$Related <- as.factor(df$Related)
shapiro.test(df$Crops)
shapiro.test(df$Size)
library(car)
leveneTest(Crops ~ County, data = df)
leveneTest(Crops ~ Related, data = df)
library(car)
leveneTest(Crops ~ County, data = df)
leveneTest(Crops ~ Related, data = df)
leveneTest(Crops ~ County:Related, data = df)
boxplot(df$Crops)
boxplot(df$Size)
boxplot(df$Size,horizontal = True)
boxplot(df$Size,horizontal = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# only round 3
options(digits = 3)
knitr::opts_chunk$set(fig.height = 2.5)
install.packages(MASS)
library(MASS)
<!--install.packages(MASS)-->
library(MASS)
library(MASS)
library(MASS)
npk
library(MASS)
data(npk)
library(MASS)
data(npk)
library(MASS)
data(npk)
npk$N <- rep(c(1, 0, 1, 0), 6)  # Two plots per block get N
npk$P <- sample(rep(c(1, 0, 1, 0), 6))  # Shuffle P
npk$K <- sample(rep(c(1, 0, 1, 0), 6))  # Shuffle K
npk
library(ggplot2)
# Compute average yield per block for N = 1 and N = 0
avg_yield <- aggregate(yield ~ block + N, data = npk, FUN = mean)
# Plot
ggplot(avg_yield, aes(x = block, y = yield, fill = factor(N))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Block", y = "Average Yield", fill = "Nitrogen (1 = Yes, 0 = No)") +
theme_minimal()
library(MASS)
npk_1=data(npk)
npk_1$N <- rep(c(1, 0, 1, 0), 6)  # Two plots per block get N
npk_1$P <- sample(rep(c(1, 0, 1, 0), 6))  # Shuffle P
npk_1$K <- sample(rep(c(1, 0, 1, 0), 6))  # Shuffle K
npk_1
library(ggplot2)
library(MASS)
data(npk)
# Compute average yield per block for N = 1 and N = 0
avg_yield <- aggregate(yield ~ block + N, data = npk, FUN = mean)
# Plot
ggplot(avg_yield, aes(x = block, y = yield, fill = factor(N))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Block", y = "Average Yield", fill = "Nitrogen (1 = Yes, 0 = No)") +
theme_minimal()
anova_model <- aov(yield ~ block + N, data = npk)
summary(anova_model)
df <- read.table("crops.txt", header = TRUE)
df$County <- as.factor(df$County)
df$Related <- as.factor(df$Related)
shapiro.test(df$Crops)
shapiro.test(df$Size)
boxplot(df$Crops)
library(car)
leveneTest(Crops ~ County, data = df)
leveneTest(Crops ~ Related, data = df)
leveneTest(Crops ~ County:Related, data = df)
anova_model1 <- aov(Crops ~ County + Related, data = df)
summary(anova_model1)
anova_model2 <- aov(Crops ~ County*Related, data = df)
summary(anova_model2)
new_farm <- data.frame(
County = factor(3, levels = c(1, 2, 3)),
Related = factor("no", levels = c("no", "yes"))
)
predicted_crops <- predict(anova_model1, newdata = new_farm, interval = "confidence")
print(predicted_crops)
TukeyHSD(anova_model2)
plot(fitted_values1,residuals , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
residuals1 <- resid(anova_model1)
fitted_values1 <- fitted(anova_model1)
qqnorm(residuals1)
boxplot(df$Size,horizontal = TRUE)
ancova_main <- aov(Crops ~ County + Related + Size, data = df)
summary(ancova_main)
library(car)
leveneTest(Crops ~ County, data = df)
leveneTest(Crops ~ Related, data = df)
leveneTest(Crops ~ County:Related, data = df)
anova_model1 <- aov(Crops ~ County + Related, data = df)
summary(anova_model1)
anova_model2 <- aov(Crops ~ County*Related, data = df)
summary(anova_model2)
new_farm <- data.frame(
County = factor(3, levels = c(1, 2, 3)),
Related = factor("no", levels = c("no", "yes"))
)
predicted_crops <- predict(anova_model1, newdata = new_farm, interval = "confidence")
print(predicted_crops)
TukeyHSD(anova_model2)
plot(fitted_values1,residuals , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
residuals1 <- resid(anova_model1)
fitted_values1 <- fitted(anova_model1)
qqnorm(residuals1)
boxplot(df$Size,horizontal = TRUE)
ancova_main <- aov(Crops ~ County + Related + Size, data = df)
summary(ancova_main)
ancova_county_size <- aov(Crops ~ County * Size + Related, data = df)
summary(ancova_county_size)
ancova_related_size <- aov(Crops ~ County + Related * Size, data = df)
summary(ancova_related_size)
AIC(ancova_main, ancova_county_size, ancova_related_size)
library(ggplot2)
ggplot(df, aes(x = Size, y = Crops, color = County)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Effect of Size on Crops Across Counties",
x = "Farm Size", y = "Crops Yield")
new_farm <- data.frame(
County = factor(2, levels = c(1, 2, 3)),
Related = factor("yes", levels = c("no", "yes")),
Size = 165
)
predicted_crops <- predict(ancova_county_size, newdata = new_farm, interval = "confidence")
print(predicted_crops)
residuals <- resid(ancova_county_size)
fitted_values <- fitted(ancova_county_size)
qqnorm(residuals)
qqline(residuals, col = "red")
plot(fitted_values, residuals,
main = "Residuals vs Fitted Values",
xlab = "Fitted Values",
ylab = "Residuals")
abline(h = 0, col = "red", lty = 2) # Add a horizontal line at 0
error_variance <- sum(residuals(ancova_county_size)^2) / df.residual(ancova_county_size)
print(error_variance)
knitr::opts_chunk$set(echo = TRUE)
# only round 3
options(digits = 3)
knitr::opts_chunk$set(fig.height = 2.5)
data = read.table('cholesterol.txt', header = TRUE)
# Before
par(mfrow = c(1,2))
hist(data$Before, main="Before", xlab="Cholesterol (mmol/L)", col="lightblue", border="black")
qqnorm(data$Before, main="Q-Q Plot for Before 8 Weeks")
qqline(data$Before, col="red")
# After
hist(data$After8weeks, main="After 8 Weeks", xlab="Cholesterol (mmol/L)", col="lightgreen", border="black")
qqnorm(data$After8weeks, main="Q-Q Plot for After 8 Weeks")
qqline(data$After8weeks, col="red")
#
par(mfrow = c(1,2))
boxplot(data$Before)
boxplot(data$After8weeks)
par(mfrow = c(1,1))
plot(data$Before, data$After8weeks,
main = "Scatter Plot of Before vs. After 8 Weeks",
xlab = "Before", ylab = "After 8 Weeks",
col = "black", pch = 16)
cor.test(data$Before, data$After8weeks, method="pearson")
t.test(data$Before,data$After8weeks, paired=TRUE)
mean_difference = function(x,y) {mean(x-y)}
original_diff <- mean(data$Before - data$After8weeks)
B=1000; tstar=numeric(B)
for (i in 1:B) {
md_star=t(apply(cbind(data$Before,data$After8weeks),1,sample))
tstar[i]=mean_difference(data$Before,data$After8weeks)
}
myt = mean_difference(data$Before,data$After8weeks);myt
pl=sum(tstar<myt)/B
pr=sum(tstar>myt)/B
p=2*min(pl,pr); p
x = data$After8weeks
n = length(x)
x_mean = mean(x)
x_sd = sd(x)
alpha = 0.03
t = qt(1-alpha/2, df = n-1)
CI_normal = c(
x_mean - t * (x_sd / sqrt(n)),
x_mean + t * (x_sd / sqrt(n))
)
cat("Normality 97% confidence interval: [", round(CI_normal[1], 3),
",", round(CI_normal[2], 3), "]\n")
B = 1000
x_mean = mean(data$After8weeks)
Tstar = numeric(B)
for(i in 1:B){
Xstar=sample(data$After8weeks,replace=TRUE)
Tstar[i]=mean(Xstar)
}
Tstar15 = quantile(Tstar, 0.015)
Tstar985 = quantile(Tstar, 0.985)
CI_bootstrap = c(2*x_mean-Tstar985,2*x_mean-Tstar15)
cat("Bootstrap 97% confidence interval: [", round(CI_bootstrap[1], 3),
",", round(CI_bootstrap[2], 3), "]\n")
n=length(data$After8weeks) # length
t=max(data$After8weeks) # the max of samples
B=1000;
tstar=numeric(B)
theta_values = seq(3, 12, by = 0.1)
p_values = sapply(theta_values, function(theta) {
tstar = numeric(B)
for (i in 1:B){
xstar = runif(n, min = 3, max = theta)
tstar[i] = max(xstar)
}
pl = sum(tstar < t) / B
pr = sum(tstar > t) / B
p = 2 * min(pl, pr)
return(p)
})
# This is to find the range of theta for p > 0.05
theta_valid = theta_values[p_values > 0.05]
cat("The range of theta for H0 cannot be rejected: [", min(theta_valid), max(theta_valid),  "]\n")
n = length(data$After8weeks)
below_6 = sum(data$After8weeks < 6);
binom.test(below_6,n,p=0.5,alt="l")
wilcox.test(data$After8weeks,mu=6)
below_4.5 = sum(data$After8weeks <= 4.5)
n = length(data$After8weeks)
# check if percentage of cholesterol levels below 4.5 is greater then 25%
binom.test(below_4.5,n,p=0.25,alt="greater")
df <- read.table("crops.txt", header = TRUE)
df$County <- as.factor(df$County)
df$Related <- as.factor(df$Related)
shapiro.test(df$Crops)
shapiro.test(df$Size)
boxplot(df$Crops)
library(car)
leveneTest(Crops ~ County, data = df)
leveneTest(Crops ~ Related, data = df)
leveneTest(Crops ~ County:Related, data = df)
anova_model1 <- aov(Crops ~ County + Related, data = df)
summary(anova_model1)
anova_model2 <- aov(Crops ~ County*Related, data = df)
summary(anova_model2)
new_farm <- data.frame(
County = factor(3, levels = c(1, 2, 3)),
Related = factor("no", levels = c("no", "yes"))
)
predicted_crops <- predict(anova_model1, newdata = new_farm, interval = "confidence")
print(predicted_crops)
TukeyHSD(anova_model2)
plot(fitted_values1,residuals , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
residuals1 <- resid(anova_model1)
fitted_values1 <- fitted(anova_model1)
qqnorm(residuals1)
boxplot(df$Size,horizontal = TRUE)
ancova_main <- aov(Crops ~ County + Related + Size, data = df)
summary(ancova_main)
ancova_county_size <- aov(Crops ~ County * Size + Related, data = df)
summary(ancova_county_size)
ancova_related_size <- aov(Crops ~ County + Related * Size, data = df)
summary(ancova_related_size)
AIC(ancova_main, ancova_county_size, ancova_related_size)
library(ggplot2)
ggplot(df, aes(x = Size, y = Crops, color = County)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Effect of Size on Crops Across Counties",
x = "Farm Size", y = "Crops Yield")
new_farm <- data.frame(
County = factor(2, levels = c(1, 2, 3)),
Related = factor("yes", levels = c("no", "yes")),
Size = 165
)
predicted_crops <- predict(ancova_county_size, newdata = new_farm, interval = "confidence")
print(predicted_crops)
residuals <- resid(ancova_county_size)
fitted_values <- fitted(ancova_county_size)
qqnorm(residuals)
qqline(residuals, col = "red")
plot(fitted_values, residuals,
main = "Residuals vs Fitted Values",
xlab = "Fitted Values",
ylab = "Residuals")
abline(h = 0, col = "red", lty = 2) # Add a horizontal line at 0
error_variance <- sum(residuals(ancova_county_size)^2) / df.residual(ancova_county_size)
print(error_variance)
install.packages("tinytex")
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
# only round 3
options(digits = 3)
knitr::opts_chunk$set(fig.height = 2.5)
install.packages("tinytex")
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
# only round 3
options(digits = 3)
knitr::opts_chunk$set(fig.height = 2.5)
install.packages("tinytex")
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
# only round 3
options(digits = 3)
knitr::opts_chunk$set(fig.height = 2.5)
length(fitted_values)
length(residuals)
plot(fitted_values, residuals,
main = "Residuals vs Fitted Values",
xlab = "Fitted Values",
ylab = "Residuals")
abline(h = 0, col = "red", lty = 2)
length(data$Before)
length(data$After8weeks)
plot(data$Before, data$After8weeks,
main = "Scatter Plot of Before vs. After 8 Weeks",
xlab = "Before", ylab = "After 8 Weeks",
col = "black", pch = 16)
length(fitted_values1)
length(residuals)
plot(fitted_values1,residuals , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
#length(fitted_values1)
#length(residuals)
plot(fitted_values1,residuals , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
length(fitted_values1)
length(residuals)
plot(fitted_values1,residuals , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
#length(fitted_values1)
#length(residuals)
class(fitted_values1)
class(residuals)
plot(fitted_values1,residuals , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
#length(fitted_values1)
#length(residuals)
#class(fitted_values1)
#class(residuals)
dim(fitted_values1)
dim(residuals)
plot(fitted_values1,residuals , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
residuals1 <- resid(anova_model1)
fitted_values1 <- fitted(anova_model1)
qqnorm(residuals1)
#length(fitted_values1)
#length(residuals)
#class(fitted_values1)
#class(residuals)
plot(fitted_values1,residuals , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
#length(fitted_values1)
#length(residuals)
#class(fitted_values1)
#class(residuals)
plot(fitted_values1,residuals1 , main = "Residuals vs. Fitted",
xlab = "Fitted Values", ylab = "Residuals", pch = 19)
abline(h = 0, col = "red", lty = 2)
library(ggplot2)
library(MASS)
data(npk)
# Compute average yield per block for N = 1 and N = 0
avg_yield <- aggregate(yield ~ block + N, data = npk, FUN = mean)
# Plot
ggplot(avg_yield, aes(x = block, y = yield, fill = factor(N))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Block", y = "Average Yield", fill = "Nitrogen (1 = Yes, 0 = No)") +
theme_minimal()
data(npk)
npk
data(npk)
friedman.test(yield~block|N,data=npk)
